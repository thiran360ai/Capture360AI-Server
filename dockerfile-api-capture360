# Use an Alpine base image with Python 3.10
FROM python:3.10-alpine

# Set environment variables
ARG BUILD_TIMESTAMP
ENV BUILD_TIMESTAMP=$BUILD_TIMESTAMP
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Set working directory
WORKDIR /app

# Install required packages and dependencies for Alpine
RUN apk add --no-cache \
    libstdc++ \
    libgcc \
    libjpeg-turbo \
    libpng \
    libx11 \
    libxcb \
    libxext \
    libxrender \
    mesa-gl \
    && apk add --no-cache --virtual .build-deps \
    gcc \
    g++ \
    musl-dev \
    jpeg-dev \
    zlib-dev \
    libffi-dev \
    openssl-dev \
    && apk del .build-deps

# Upgrade pip to ensure compatibility
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# Copy and install Python dependencies
COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Ensure the entrypoint script is executable
RUN chmod +x /app/entrypoint.sh

# Expose the application port
EXPOSE 8080

# Set the entrypoint and default command
ENTRYPOINT ["/app/entrypoint.sh"]
CMD ["sh", "-c", "python manage.py runserver 0.0.0.0:8080"]
